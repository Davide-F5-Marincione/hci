openapi: 3.0.3
info:
  title: MobiliTeam backend interface
  description: |-
    The title says it all
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    InternalServerError:
      description: |-
        The server encountered an internal error.
  schemas:
    lineinfo:
      title: Line info
      description: |-
        This object contains all of a line's info at a certain point in time
      type: object
      properties:
        stops:
          description: List of stops followed by the line
          type: array
          items:
            type: string
        buses:
          description: List of buses servicing the line
          type: array
          items:
            type: string

    businfo:
      title: Bus info
      description: |-
        This object contains all of a bus's info at a certain point in time
      type: object
      properties:
        line:
          type: string
          description: Line of the bus
        last_seen:
          description: Last time the bus has been signaled
          type: string
        overcrowded:
          description: Whether the bus was overcrowded
          type: boolean
        expected_position:
          description: The last stop where the bus should be
          type: string
        expected_time_left:
          description: Expected time left to get to next stop
          type: integer

    route:
      title: Route
      description: |-
        This object contains all of the info for a possible route
      type: array
      items:
        type: object
        properties:
          bus:
            $ref: "#/components/schemas/businfo"
          line:
            type: string
            description: Line of the bus
          stops:
            type: array
            items:
              type: object
              properties:
                stop-name:
                  type: string
                time:
                  type: string
paths:
  /lines/{line}:
    parameters:
      - in: path
        name: line
        schema:
          type: string
        required: true
    get:
      summary: Get this line's info
      description: Returns all of a line's info, including stops and buses currently travelling on the line
      operationId: getLineInfo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lineinfo"
        "404":
          description: Line not found
        "500":
          $ref: "#/components/responses/InternalServerError"
  /buses/{bus}:
    parameters:
      - in: path
        name: bus
        schema:
          type: string
        required: true
    get:
      summary: Get this bus's info
      description: Returns as specific bus's info
      operationId: getBusInfo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/businfo"
        "404":
          description: Bus not found
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      security:
        - bearerAuth: []
      summary: Board/overcrowd bus
      description: Sets a specific bus's info
      operationId: setBusInfo
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                overcrowded:
                  description: Whether the bus is currently overcrowded
                  type: boolean
                from:
                  description: Where the bus was boarded
                  type: string
                to:
                  description: Where the bus is heading
                  type: string
                boardedat:
                  description: How much time ago the boarding happened
                  type: number
                  minimum: 0
        required: true
      responses:
        "204":
          description: Successful operation
        "400":
          description: Request badly formed
        "404":
          description: Bus not found
        "500":
          $ref: "#/components/responses/InternalServerError"
  /route:
    put:
      summary: Request route
      description: Returns possible routes from one stop to another
      operationId: reqRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: starting stop
                to:
                  type: string
                  description: ending stop
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/route"
        "400":
          description: Request badly formed
        "404":
          description: Stops not found
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users:
    post:
      summary: Create user
      description: Creates a user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User name
      responses:
        "200":
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: string
        "201":
          description: User log-in (registration) action successful
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Unacceptable username
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users/{user}:
    parameters:
      - in: path
        name: user
        schema:
          type: string
        required: true
    get:
      security:
        - bearerAuth: []
      summary: Get credits
      description: Returns user's credits
      operationId: getUserCredits
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  credits:
                    type: integer
                    description: User's credits
        "404":
          description: User not found
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      security:
        - bearerAuth: []
      summary: Spend credits
      description: Spends credits to donate to a specific org
      operationId: spendCredits
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ong:
                  description: Which ong to donate to
                  type: string
                credits:
                  description: Amount donated
                  type: integer
        required: true
      responses:
        "204":
          description: Successful operation
        "400":
          description: Request badly formed
        "404":
          description: User not found
        "500":
          $ref: "#/components/responses/InternalServerError"
