openapi: 3.0.3
info:
  title: MobiliTeam backend interface
  description: |-
    The title says it all
  version: 1.0.0
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    InternalServerError:
      description: |-
        The server encountered an internal error.
  schemas:
    businfo:
      title: Bus info
      description: |-
        This object contains all of a bus's info at a certain point in time
      type: object
      properties:
        line:
          type: string
          description: Line of the bus
        last_seen:
          description: Datetime of last boarded signal
          type: string
        crowdedness:
          description: Calculated value that represents how much the bus is crowded (1=very crowded, 0=empty)
          type: number
          minimum: 0
          maximum: 1
        crowdedness_var:
          description: Variance of crowdedness calculation
          type: number
          minimum: 0
          maximum: 1
        expected_next_arrival:
          description: Expected datetime to get to next stop (delay accounted for)
          type: string
        expected_from:
          description: The last stop where the bus should be
          type: string
        expected_to:
          description: The next stop where the bus should be
          type: string
        calculated_delay:
          description: Calculated delay
          type: number

    lineinfo:
      title: Line info
      description: |-
        This object contains all of a line's info at a certain point in time
      type: object
      properties:
        stops:
          description: List of stops followed by the line
          type: array
          items:
            type: string
        buses:
          description: List of buses servicing the line
          type: array
          items:
            $ref: "#/components/schemas/businfo"

    route:
      title: Route
      description: |-
        This object contains all of the info for a possible route
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        departure_time:
          type: string
        arrival_time:
          type: string
        transits:
          type: array
          items:
            type: object
            properties:
              transit_type:
                type: string
              transit_color:
                type: string
              transit_name:
                type: string
              transit_line:
                type: string
              delay:
                type: string
              crowdedness_mu:
                type: number
              crowdedness_var:
                type: number
              last_seen:
                type: string
              stops:
                type: array
                items:
                  type: object
                  properties:
                    stop-name:
                      type: string
                    time:
                      type: string
paths:
  /lines/{line}:
    parameters:
      - in: path
        name: line
        schema:
          type: string
        required: true
    get:
      summary: Get this line's info
      description: Returns all of a line's info, including stops and buses currently travelling on the line
      operationId: getLineInfo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/lineinfo"
        "404":
          description: Line not found
        "500":
          $ref: "#/components/responses/InternalServerError"
  /buses/{bus}:
    parameters:
      - in: path
        name: bus
        schema:
          type: string
        required: true
    get:
      summary: Get this bus's info
      description: Returns as specific bus's info
      operationId: getBusInfo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/businfo"
        "404":
          description: Bus not found
        "500":
          $ref: "#/components/responses/InternalServerError"

  /buses/{bus}/signal:
    put:
      summary: Report bus
      description: Reports overcrowding (or not) on a bus
      operationId: signalBus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_overcrowded:
                  description: Whether the bus is currently overcrowded
                  type: boolean
        required: true
      responses:
        "204":
          description: Successful operation
        "400":
          description: Request badly formed
        "404":
          description: Bus not found
        "500":
          $ref: "#/components/responses/InternalServerError"

  /route:
    put:
      summary: Request route
      description: Returns possible routes from one stop to another
      operationId: reqRoute
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: starting stop
                to:
                  type: string
                  description: ending stop
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/route"
        "400":
          description: Request badly formed
        "404":
          description: Stops not found
        "500":
          $ref: "#/components/responses/InternalServerError"
  /session:
    post:
      summary: Log-In user
      description: Logs a user in
      operationId: logIn
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User name
      responses:
        "200":
          description: User registration action successful
          content:
            application/json:
              schema:
                type: string
        "404":
          description: User not found
        "500":
          $ref: "#/components/responses/InternalServerError"
  /users:
    post:
      summary: Create user
      description: Creates a user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User name
                firstname:
                  type: string
                  description: First name
                lastname:
                  type: string
                  description: Last name
                email:
                  type: string
                  description: email
                  pattern: ^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$
      responses:
        "204":
          description: User registration action successful
        "403":
          description: User already exists
        "500":
          $ref: "#/components/responses/InternalServerError"

  /users/{user}:
    parameters:
      - in: path
        name: user
        schema:
          type: string
        required: true
    get:
      security:
        - bearerAuth: []
      summary: Get user info
      description: Returns user's info
      operationId: getUserInfo
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: User name
                  firstname:
                    type: string
                    description: First name
                  lastname:
                    type: string
                    description: Last name
                  email:
                    type: string
                    description: email
                  credits:
                    type: integer
                    description: User's credits
                  reports_counter:
                    type: integer
                    description: User's reports
                  donations_counter:
                    type: integer
                    description: User's donations
        "404":
          description: User not found
        "500":
          $ref: "#/components/responses/InternalServerError"


  /users/{user}/credits:
    parameters:
      - in: path
        name: user
        schema:
          type: string
        required: true
    get:
      security:
        - bearerAuth: []
      summary: Get credits
      description: Returns user's credits
      operationId: getUserCredits
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  credits:
                    type: integer
                    description: User's credits
        "404":
          description: User not found
        "500":
          $ref: "#/components/responses/InternalServerError"

  /users/{user}/donate:
    put:
      security:
        - bearerAuth: []
      summary: Spend credits
      description: Spends credits to donate to a specific org
      operationId: spendCredits
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ong:
                  description: Which ong to donate to
                  type: string
                credits:
                  description: Amount donated
                  type: integer
        required: true
      responses:
        "200":
          description: Successful operation
        "400":
          description: Request badly formed
        "404":
          description: User not found
        "500":
          $ref: "#/components/responses/InternalServerError"

  /liveness:
    get:
      summary: Ping the server
      operationId: livenessCheck
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Server status
        "500":
          $ref: "#/components/responses/InternalServerError"
